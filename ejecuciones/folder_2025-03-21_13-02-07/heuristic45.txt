
def heuristic(data):
    """
    A heuristic algorithm for solving the Flexible Job Shop Scheduling Problem (FJSSP).
    This algorithm prioritizes minimizing makespan while considering machine load balance and separation of operations within the same job.

    Args:
        data (dict): A dictionary containing the problem data, including the number of jobs, machines, and operations.

    Returns:
        dict: A dictionary representing the schedule, where keys are job numbers and values are lists of operation schedules.
    """

    n_jobs = data['n_jobs']
    n_machines = data['n_machines']
    jobs = data['jobs']

    # Initialize schedule and machine availability
    schedule = {job: [] for job in range(1, n_jobs + 1)}
    machine_availability = {machine: 0 for machine in range(1, n_machines + 1)}

    # Iterate through jobs and operations
    for job_id in range(1, n_jobs + 1):
        current_time = 0
        for operation_index, operation in enumerate(jobs[job_id]):
            machines, processing_times = operation

            # Find the machine with the earliest availability
            best_machine = None
            min_end_time = float('inf')

            for i, machine in enumerate(machines):
                available_time = machine_availability[machine]
                end_time = max(current_time, available_time) + processing_times[i]

                if end_time < min_end_time:
                    min_end_time = end_time
                    best_machine = machine
                    best_processing_time = processing_times[i]

            # Schedule the operation
            start_time = max(current_time, machine_availability[best_machine])
            end_time = start_time + best_processing_time

            schedule[job_id].append({
                'Operation': operation_index + 1,
                'Assigned Machine': str(best_machine),
                'Start Time': start_time,
                'End Time': end_time,
                'Processing Time': best_processing_time
            })

            # Update machine availability and current time for the job
            machine_availability[best_machine] = end_time
            current_time = end_time

    return schedule
