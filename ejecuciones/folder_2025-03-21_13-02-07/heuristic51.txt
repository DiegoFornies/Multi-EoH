
def heuristic(input_data):
    """Schedules jobs minimizing machine idle time and balancing load.
    Combines machine availability and job priority based on machine choices.
    """
    n_jobs = input_data['n_jobs']
    n_machines = input_data['n_machines']
    jobs_data = input_data['jobs']

    machine_availability = {m: 0 for m in range(n_machines)}
    job_completion_times = {job: 0 for job in range(1, n_jobs + 1)}
    schedule = {}

    # Prioritize jobs with fewer machine choices.
    job_priority = sorted(jobs_data.keys(),
                         key=lambda job: sum(len(machines) for machines, _ in jobs_data[job]) / len(jobs_data[job]))

    for job in job_priority:
        schedule[job] = []
        current_time = 0

        for op_index, (machines, times) in enumerate(jobs_data[job]):
            best_machine = None
            min_available_time = float('inf')
            best_processing_time = float('inf')

            for i in range(len(machines)):
                machine = machines[i]
                processing_time = times[i]
                available_time = max(machine_availability[machine], job_completion_times[job])

                if available_time < min_available_time or \
                   (available_time == min_available_time and processing_time < best_processing_time):
                    min_available_time = available_time
                    best_machine = machine
                    best_processing_time = processing_time
                    best_index = i
                    

            start_time = max(machine_availability[best_machine], job_completion_times[job])
            end_time = start_time + best_processing_time

            schedule[job].append({
                'Operation': op_index + 1,
                'Assigned Machine': best_machine,
                'Start Time': start_time,
                'End Time': end_time,
                'Processing Time': best_processing_time
            })
            
            machine_availability[best_machine] = end_time
            job_completion_times[job] = end_time

    return schedule
