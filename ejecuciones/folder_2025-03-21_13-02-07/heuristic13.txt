
def heuristic(input_data):
    """
    A heuristic for the Flexible Job Shop Scheduling Problem (FJSSP).

    This heuristic prioritizes minimizing idle time on machines and balancing
    workload by selecting machines with the earliest available time and shortest
    processing time for each operation.
    """

    n_jobs = input_data['n_jobs']
    n_machines = input_data['n_machines']
    jobs = input_data['jobs']

    schedule = {}
    machine_available_time = {m: 0 for m in range(n_machines)}
    job_completion_time = {j: 0 for j in range(1, n_jobs + 1)}

    for job_id in range(1, n_jobs + 1):
        schedule[job_id] = []
        operations = jobs[job_id]

        for operation_index, operation in enumerate(operations, 1):
            possible_machines = operation[0]
            possible_times = operation[1]

            # Find the machine with the earliest available time among the possible machines
            best_machine = None
            min_available_time = float('inf')
            best_processing_time = float('inf')
            
            for i in range(len(possible_machines)):
              machine = possible_machines[i]
              processing_time = possible_times[i]
              available_time = machine_available_time[machine]

              if available_time < min_available_time or (available_time == min_available_time and processing_time < best_processing_time):
                min_available_time = available_time
                best_machine = machine
                best_processing_time = processing_time
                best_index = i

            # Schedule the operation on the best machine
            start_time = max(machine_available_time[best_machine], job_completion_time[job_id])
            end_time = start_time + best_processing_time

            schedule[job_id].append({
                'Operation': operation_index,
                'Assigned Machine': best_machine,
                'Start Time': start_time,
                'End Time': end_time,
                'Processing Time': best_processing_time
            })

            # Update machine and job completion times
            machine_available_time[best_machine] = end_time
            job_completion_time[job_id] = end_time

    return schedule
