
def heuristic(data):
    """
    Schedules jobs on machines to minimize makespan, separation, and balance in a Flexible Job Shop Scheduling Problem (FJSSP).

    Args:
        data (dict): A dictionary containing the problem definition.

    Returns:
        dict: A dictionary representing the schedule, with jobs as keys and lists of operation details as values.
    """

    n_jobs = data['n_jobs']
    n_machines = data['n_machines']
    jobs = data['jobs']

    # Initialize machine availability times
    machine_availability = {m: 0 for m in range(1, n_machines + 1)}

    # Initialize job completion times
    job_completion_times = {j: 0 for j in range(1, n_jobs + 1)}

    # Initialize the solution
    solution = {j: [] for j in range(1, n_jobs + 1)}

    # Schedule operations
    for job_id in range(1, n_jobs + 1):
        operations = jobs[job_id]
        current_time = job_completion_times[job_id]

        for op_num, operation in enumerate(operations):
            machines, processing_times = operation

            # Find the earliest available machine and corresponding processing time
            best_machine = None
            min_start_time = float('inf')
            best_processing_time = None

            for i, machine in enumerate(machines):
                start_time = max(current_time, machine_availability[machine])
                if start_time < min_start_time:
                    min_start_time = start_time
                    best_machine = str(machine)
                    best_processing_time = processing_times[i]

            # Schedule the operation on the best machine
            start_time = min_start_time
            end_time = start_time + best_processing_time

            solution[job_id].append({
                'Operation': op_num + 1,
                'Assigned Machine': best_machine,
                'Start Time': start_time,
                'End Time': end_time,
                'Processing Time': best_processing_time
            })

            # Update machine availability and job completion time
            machine_availability[int(best_machine)] = end_time
            job_completion_times[job_id] = end_time

    return solution
