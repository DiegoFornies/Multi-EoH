
def heuristic(input_data):
    """Combines shortest processing time, machine availability and operation order."""
    n_jobs = input_data['n_jobs']
    n_machines = input_data['n_machines']
    jobs = input_data['jobs']
    machine_available_time = {m: 0 for m in range(n_machines)}
    job_completion_time = {j: 0 for j in jobs}
    schedule = {j: [] for j in jobs}
    operations = []

    for job, operations_list in jobs.items():
        for op_idx, (machines, times) in enumerate(operations_list):
            operations.append({
                'job': job,
                'operation': op_idx + 1,
                'machines': machines,
                'times': times,
            })

    def calculate_priority(op):
        job = op['job']
        return job_completion_time[job]

    operations.sort(key=calculate_priority)

    for op in operations:
        job = op['job']
        op_num = op['operation']
        best_machine = None
        earliest_start = float('inf')
        best_time_index = None
        shortest_processing_time = float('inf')

        for m_idx, machine in enumerate(op['machines']):
            processing_time = op['times'][m_idx]
            start_time = max(machine_available_time[machine], job_completion_time[job])

            if start_time < earliest_start or (start_time == earliest_start and processing_time < shortest_processing_time):
                earliest_start = start_time
                best_machine = machine
                best_time_index = m_idx
                shortest_processing_time = processing_time

        if best_machine is not None:
            processing_time = op['times'][best_time_index]
            start_time = max(machine_available_time[best_machine], job_completion_time[job])
            end_time = start_time + processing_time

            schedule[job].append({
                'Operation': op_num,
                'Assigned Machine': best_machine,
                'Start Time': start_time,
                'End Time': end_time,
                'Processing Time': processing_time
            })

            machine_available_time[best_machine] = end_time
            job_completion_time[job] = end_time

    return schedule
