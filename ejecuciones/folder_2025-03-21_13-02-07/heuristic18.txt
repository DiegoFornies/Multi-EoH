
def heuristic(input_data):
    """Schedules jobs to minimize makespan and balance machine load."""

    n_jobs = input_data['n_jobs']
    n_machines = input_data['n_machines']
    jobs = input_data['jobs']

    schedule = {}
    machine_availability = {m: 0 for m in range(n_machines)}
    job_completion_times = {j: 0 for j in range(1, n_jobs + 1)}

    operations = []
    for job_id, job_ops in jobs.items():
        for op_index, op_data in enumerate(job_ops, 1):
            operations.append((job_id, op_index, op_data[0], op_data[1]))

    def calculate_priority(operation):
        job_id, _, _, times = operation
        min_time = min(times)
        return job_completion_times[job_id] + min_time

    operations.sort(key=calculate_priority)

    for job_id, op_index, possible_machines, possible_times in operations:
        best_machine = None
        min_end_time = float('inf')
        best_processing_time = None

        for m_idx, machine in enumerate(possible_machines):
            processing_time = possible_times[m_idx]
            start_time = max(machine_availability[machine], job_completion_times[job_id])
            end_time = start_time + processing_time

            if end_time < min_end_time:
                min_end_time = end_time
                best_machine = machine
                best_processing_time = processing_time
            elif end_time == min_end_time and machine_availability[machine] < machine_availability[best_machine if best_machine is not None else 0]:
                best_machine = machine
                best_processing_time = processing_time

        start_time = max(machine_availability[best_machine], job_completion_times[job_id])
        end_time = start_time + best_processing_time

        if job_id not in schedule:
            schedule[job_id] = []

        schedule[job_id].append({
            'Operation': op_index,
            'Assigned Machine': best_machine,
            'Start Time': start_time,
            'End Time': end_time,
            'Processing Time': best_processing_time
        })

        machine_availability[best_machine] = end_time
        job_completion_times[job_id] = end_time

    return schedule
