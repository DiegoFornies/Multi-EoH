
def heuristic(data):
    """
    A heuristic to solve the Flexible Job Shop Scheduling Problem (FJSSP).

    Args:
        data (dict): A dictionary containing the problem data.

    Returns:
        dict: A dictionary representing the solution, with job numbers as keys
              and lists of operation dictionaries as values.
    """

    n_jobs = data['n_jobs']
    n_machines = data['n_machines']
    jobs = data['jobs']

    # Initialize solution dictionary
    solution = {}
    for job_id in range(1, n_jobs + 1):
        solution[job_id] = []

    # Initialize machine available times
    machine_available_time = {machine_id: 0 for machine_id in range(1, n_machines + 1)}

    # Initialize job completion times
    job_completion_time = {job_id: 0 for job_id in range(1, n_jobs + 1)}

    # Schedule operations
    for job_id, operations in jobs.items():
        for operation_index, operation_data in enumerate(operations):
            machines = operation_data[0]
            processing_times = operation_data[1]

            # Find the machine that allows the earliest completion time for the operation
            best_machine = None
            min_completion_time = float('inf')
            best_processing_time = None

            for i, machine_id in enumerate(machines):
                machine_id = int(machine_id)
                processing_time = processing_times[i]
                start_time = max(machine_available_time[machine_id], job_completion_time[job_id])
                completion_time = start_time + processing_time

                if completion_time < min_completion_time:
                    min_completion_time = completion_time
                    best_machine = str(machine_id)
                    best_processing_time = processing_time
                    best_start_time = start_time

            # Assign the operation to the best machine
            machine_available_time[int(best_machine)] = min_completion_time
            job_completion_time[job_id] = min_completion_time

            # Add the operation to the solution
            solution[job_id].append({
                'Operation': operation_index + 1,
                'Assigned Machine': best_machine,
                'Start Time': best_start_time,
                'End Time': min_completion_time,
                'Processing Time': best_processing_time
            })

    return solution
