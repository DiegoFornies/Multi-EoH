
def heuristic(data):
    """
    A heuristic algorithm for solving the Flexible Job Shop Scheduling Problem (FJSP).

    Args:
        data (dict): A dictionary containing the problem data.

    Returns:
        dict: A dictionary representing the schedule.
    """

    n_jobs = data['n_jobs']
    n_machines = data['n_machines']
    jobs = data['jobs']

    # Initialize schedule
    schedule = {}
    for job_id in range(1, n_jobs + 1):
        schedule[job_id] = []

    # Initialize machine available times
    machine_available_time = {machine_id: 0 for machine_id in range(1, n_machines + 1)}

    # Initialize job completion times
    job_completion_time = {job_id: 0 for job_id in range(1, n_jobs + 1)}

    # Schedule operations
    for job_id in range(1, n_jobs + 1):
        operations = jobs[job_id]
        for operation_index, operation in enumerate(operations):
            machines, processing_times = operation

            # Find the machine with the earliest available time among feasible machines
            best_machine = None
            min_start_time = float('inf')

            for machine_index, machine_id in enumerate(machines):
                start_time = max(machine_available_time[machine_id], job_completion_time[job_id])

                if start_time < min_start_time:
                    min_start_time = start_time
                    best_machine = machine_id
                    best_processing_time = processing_times[machine_index]  # Correct processing time


            # Assign the operation to the best machine
            start_time = max(machine_available_time[best_machine], job_completion_time[job_id])
            end_time = start_time + best_processing_time

            # Update machine available time and job completion time
            machine_available_time[best_machine] = end_time
            job_completion_time[job_id] = end_time


            # Add the operation to the schedule
            schedule[job_id].append({
                'Operation': operation_index + 1,
                'Assigned Machine': str(best_machine),
                'Start Time': start_time,
                'End Time': end_time,
                'Processing Time': best_processing_time
            })

    return schedule
