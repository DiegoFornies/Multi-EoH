
def heuristic(input_data):
    """
    A heuristic to solve the Flexible Job Shop Scheduling Problem (FJSSP).

    This heuristic prioritizes minimizing makespan and balancing machine load
    by considering the shortest processing time and least loaded machine for
    each operation.

    Args:
        input_data (dict): A dictionary containing the FJSSP instance data.

    Returns:
        dict: A dictionary representing the schedule, where keys are job numbers
              and values are lists of operation dictionaries.
    """

    n_jobs = input_data['n_jobs']
    n_machines = input_data['n_machines']
    jobs = input_data['jobs']

    # Initialize data structures
    schedule = {}
    machine_load = {m: 0 for m in range(n_machines)}
    job_completion_times = {j: 0 for j in range(1, n_jobs + 1)}

    # Iterate through jobs and operations
    for job_id in range(1, n_jobs + 1):
        schedule[job_id] = []
        operations = jobs[job_id]

        for op_idx, operation in enumerate(operations):
            possible_machines = operation[0]
            processing_times = operation[1]

            # Find the machine with the shortest processing time and least load
            best_machine = None
            min_end_time = float('inf')

            for i, machine_id in enumerate(possible_machines):
                processing_time = processing_times[i]
                start_time = max(machine_load[machine_id], job_completion_times[job_id])
                end_time = start_time + processing_time

                if end_time < min_end_time:
                    min_end_time = end_time
                    best_machine = machine_id
                    best_processing_time = processing_time
                    best_start_time = start_time

            # Schedule the operation on the best machine
            schedule[job_id].append({
                'Operation': op_idx + 1,
                'Assigned Machine': best_machine,
                'Start Time': best_start_time,
                'End Time': min_end_time,
                'Processing Time': best_processing_time
            })

            # Update machine load and job completion time
            machine_load[best_machine] = min_end_time
            job_completion_times[job_id] = min_end_time

    return schedule
